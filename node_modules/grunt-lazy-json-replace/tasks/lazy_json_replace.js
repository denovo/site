'use strict';
var _ = require('lodash');

module.exports = function (grunt) {
	grunt.registerMultiTask('lazy_json_replace', 'A Grunt task to replace properties in JSON files.', function () {
		var self = this;
		var done = self.async();
		self.opts = self.options();

		var replace = function (replacements) {
			_.each(self.files, function(file) {
				grunt.file.write(
					file.dest,
					JSON.stringify(_.merge(grunt.file.readJSON(file.src), replacements), undefined, self.opts.indent || "\t")
				);
				grunt.verbose.writeln("Read:", file.src, "wrote:", file.dest, "replacements:", replacements);
			});
		};

		if(!self.opts.replacements) {
			grunt.fail("No replacements provided, please provide either an object or a function.");
		}

		if(!_.isFunction(self.opts.replacements)) {
			replace(self.opts.replacements);
			done();
			return;
		}

		self.opts.replacements.call(self, function(err, replacements) {
			if(err) {
				grunt.fail("Error from replacements function", err);
			}
			replace(replacements);
			done();
		});

	});
};
