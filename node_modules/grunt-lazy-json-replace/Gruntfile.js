'use strict';

module.exports = function (grunt) {
	grunt.initConfig({
		jshint: {
			all: [
				'Gruntfile.js',
				'tasks/*.js'
			],
			options: {
				jshintrc: '.jshintrc'
			}
		},

		lazy_json_replace: {
			simple_replacement_fx: {
				options: {
					replacements: function (cb) {
						cb(null, {prop0: 'simple_replacement_fx'});
					}
				},
				files: [
					{
						src: './tests/fixtures/simple.json',
						dest: './dist/simple_replacement_fx.json'
					}
				]
			},
			simple_replacement_obj: {
				options: {
					replacements: {prop0: 'simple_replacement_obj'}
				},
				files: [
					{
						src: './tests/fixtures/simple.json',
						dest: './dist/simple_replacement_obj.json'
					}
				]
			},
			complex_replacement_obj: {
				options: {
					replacements: {
						"prop0": "complex_replacement_obj 0",
						"prop1": {
							"prop1a": "complex_replacement_obj 1a",
							"prop1b": {
								"prop1b0": "complex_replacement_obj 1b0"
							}
						}
					},
					indent: "  " // 2 spaces
				},
				files: [
					{
						src: './tests/fixtures/complex.json',
						dest: './dist/complex_replacement_obj.json'
					}
				]
			},
			complex_replacement_fn: {
				options: {
					// Use a function when your replacements aren't ready initially.
					// You can also simply set replacements to an object {}
					replacements: function (cb) {
						cb(null, {
							"prop0": "complex_replacement_fn 0",
							"prop1": {
								"prop1a": "complex_replacement_fn 1a",
								"prop1b": {
									"prop1b0": "complex_replacement_fn 1b0"
								}
							}
						});
					},
					indent: "  " // 2 spaces
				},
				files: [
					{
						src: './tests/fixtures/complex.json',
						dest: './dist/complex_replacement_obj.json'
					}
				]
			},
			complex_replacement_obj_partial: {
				options: {
					replacements: {
						"prop1": {
							"prop1a": "complex_replacement_obj_partial 1a"
						}
					}
				},
				files: [
					{
						src: './tests/fixtures/complex.json',
						dest: './dist/complex_replacement_obj_partial.json'
					}
				]
			}
		}
	});

	grunt.loadTasks('tasks');
	grunt.loadNpmTasks('grunt-contrib-jshint');
	grunt.registerTask('default', ['jshint', 'lazy_json_replace']);
};
