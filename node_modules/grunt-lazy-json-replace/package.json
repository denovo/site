{
  "name": "grunt-lazy-json-replace",
  "description": "A Grunt task to replace properties in JSON files.",
  "version": "0.0.1",
  "homepage": "https://github.com/maxnachlinger/grunt-lazy-json-replace",
  "author": {
    "name": "Max Nachlinger",
    "url": "https://github.com/maxnachlinger"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/maxnachlinger/grunt-lazy-json-replace.git"
  },
  "bugs": {
    "url": "https://github.com/maxnachlinger/grunt-lazy-json-replace/issues"
  },
  "license": "ISC",
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {
    "lodash": "~2.2.1"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.7.2",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "## grunt-lazy-json-replace\n[![Build Status](https://travis-ci.org/maxnachlinger/grunt-lazy-json-replace.png?branch=master)](https://travis-ci.org/maxnachlinger/grunt-lazy-json-replace)\n> A Grunt task to replace properties in JSON files.\n\n### Example\n```js\ngrunt.initConfig({\n\tlazy_json_replace: {\n\n\t\tcomplex_replacement_fn: {\n\t\t\toptions: {\n\t\t\t\t// Use a function when your replacements aren't ready initially.\n\t\t\t\t// You can also simply set replacements to an object {}\n\t\t\t\treplacements: function (cb) {\n\t\t\t\t\tcb(null, {\n\t\t\t\t\t\t\"prop0\": \"complex_replacement_fn 0\",\n\t\t\t\t\t\t\"prop1\": {\n\t\t\t\t\t\t\t\"prop1a\": \"complex_replacement_fn 1a\",\n\t\t\t\t\t\t\t\"prop1b\": {\n\t\t\t\t\t\t\t\t\"prop1b0\": \"complex_replacement_fn 1b0\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tindent: \"  \" // 2 spaces\n\t\t\t},\n\t\t\tfiles: [\n\t\t\t\t{\n\t\t\t\t\tsrc: './tests/fixtures/complex.json',\n\t\t\t\t\tdest: './dist/complex_replacement_obj.json'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\n\t\t// partial replacements work too\n\t\tcomplex_replacement_obj_partial: {\n\t\t\toptions: {\n\t\t\t\treplacements: {\n\t\t\t\t\t\"prop1\": {\n\t\t\t\t\t\t\"prop1a\": \"complex_replacement_obj_partial 1a\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tfiles: [\n\t\t\t\t{\n\t\t\t\t\tsrc: './tests/fixtures/complex.json',\n\t\t\t\t\tdest: './dist/complex_replacement_obj_partial.json'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n})\n```\n\n### Getting Started\nThis plugin requires Grunt `~0.4.2`\n```shell\nnpm install grunt-lazy-json-replace --save-dev\n```\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n```js\ngrunt.loadNpmTasks('grunt-lazy-json-replace');\n```\n\n### Options\n\n#### options.replacements\nRequired: What to replace in the source JSON file. You can either pass along an object specifying the replacements, or a function which returns an object specifying the replacements.\n\n#### options.indent\nOptional: Indentation to use when writing the destination JSON file.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-lazy-json-replace@0.0.1",
  "_from": "grunt-lazy-json-replace@0.0.1"
}
