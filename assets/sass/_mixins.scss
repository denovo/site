// Mixins.scss
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q

@mixin clearfix {
  *zoom: 1;
    clear: both;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

// Webkit-style focus
// ------------------
@mixin tab-focus {
  // Default
  outline: thin dotted;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Center-align a block level element
// ----------------------------------
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// IE7 inline-block
// ----------------
@mixin ie7-inline-block {
  *display: inline; /* IE7 inline-block hack */
  *zoom: 1;
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
@mixin ie7-restore-left-whitespace {
  *margin-left: .3em;

  &:first-child {
    *margin-left: 0;
  }
}

@mixin ie7-restore-right-whitespace {
  *margin-right: .3em;

  &:last-child {
    *margin-left: 0;
  }
}

// Sizing shortcuts
// -------------------------
@mixin size($height: 5px, $width: 5px) {
  width: $width;
  height: $height;
}
@mixin square($size: 5px) {
  @include size($size, $size);
}

// Placeholder text
// -------------------------
@mixin placeholder($color: $placeholderText) {
  :-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
}


// Font Stacks
@mixin shorthand-font($weight: normal, $size: $baseFontSize, $lineHeight: $baseLineHeight) {
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}
@mixin sans-serif-font($weight: normal, $size: $baseFontSize, $lineHeight: $baseLineHeight) {
  font-family: "Arial", Helvetica, sans-serif;
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}
@mixin serif-font($weight: normal, $size: $baseFontSize, $lineHeight: $baseLineHeight) {
  font-family: "Georgia", Times New Roman, Times, serif;
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}
@mixin monospace-font($weight: normal, $size: $baseFontSize, $lineHeight: $baseLineHeight) {
  font-family: "Monaco", Courier New, monospace;
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}

@mixin University-font($size: $baseFontSize, $lineHeight: $baseLineHeight) {
  font: {
    family: Georgia,Times,"Times New Roman",serif;
    size: $size;
  }
  line-height:  $lineHeight;
  outline: medium none;
  text-decoration: none;
  color: $university-slate-blue;
}

// Font size mixin to include px and rem

@mixin font-size($size, $is-important: false) {
  @if $is-important {
    font-size: $size + px !important;
    font-size: $size / 10 + rem !important; }
  @else {
    font-size: $size + px;
    font-size: $size / 10 + rem; } }

// GRID SYSTEM
// --------------------------------------------------

// Column-widths in a function, in ems
//

@mixin width($cols:1) {
  width: ($cols * ($gridColumnWidth + $gridGutterWidth) - $gridGutterWidth) / $em;
  -webkit-box-sizing:border-box;
  -moz-box-sizing:border-box;
  box-sizing:border-box;
  -moz-background-clip:padding-box !important;
  -webkit-background-clip:padding-box !important;
  background-clip:padding-box !important; 
  margin: 10px;
  float: left;
}

@mixin fullwidth($percentage:100%) {
  width: ($percentage);
  -webkit-box-sizing:border-box;
  -moz-box-sizing:border-box;
  box-sizing:border-box;
  -moz-background-clip:padding-box !important;
  -webkit-background-clip:padding-box !important;
  background-clip:padding-box !important; 
  margin: 10px;
  float: left;
}

@mixin offset($gridColumnWidth, $gridGutterWidth, $columnOffset: 1) {
   margin-left: ($gridColumnWidth * $columnOffset) + ($gridGutterWidth * ($columnOffset + 1) - $gridGutterWidth);
}

// // Input grid system
// // -------------------------
//
@mixin inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, $columns) {
  width: (($gridColumnWidth) * $columns) + ($gridGutterWidth * ($columns - 1)) - 10;
}
@mixin input_generate($gridColumns, $gridColumnWidth, $gridGutterWidth) {
  input,
  textarea,
  .uneditable-input {
    &.span1     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 1); }
    &.span2     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 2); }
    &.span3     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 3); }
    &.span4     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 4); }
    &.span5     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 5); }
    &.span6     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 6); }
    &.span7     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 7); }
    &.span8     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 8); }
    &.span9     { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 9); }
    &.span10    { @include inputColumns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 10); }
  }
}

// @mixin column-grid-background($total: $grid-background-total-columns, $column: $grid-background-column-width, $gutter: $grid-background-gutter-width, $offset: $grid-background-offset, $column-color: $grid-background-column-color, $gutter-color: $grid-background-gutter-color, $force-fluid: $grid-background-force-fluid) {
//   @if $show-grid-backgrounds and $show-column-grid-backgrounds {
//     @include background-image(get-column-gradient($total, $column, $gutter, $offset, $column-color, $gutter-color, $force-fluid));
//     background-position: left top; } }

// // CSS3 PROPERTIES
// // --------------------------------------------------

// Border Radius
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

// Transitions
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}


// Transformations
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
     -moz-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
       -o-transform: rotate($degrees);
          transform: rotate($degrees);
}
@mixin scale($ratio) {
  -webkit-transform: scale($ratio);
     -moz-transform: scale($ratio);
      -ms-transform: scale($ratio);
       -o-transform: scale($ratio);
          transform: scale($ratio);
}
@mixin translate($x: 0, $y: 0) {
  -webkit-transform: translate($x, $y);
     -moz-transform: translate($x, $y);
      -ms-transform: translate($x, $y);
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}
@mixin skew($x: 0, $y: 0) {
  -webkit-transform: translate($x, $y);
     -moz-transform: translate($x, $y);
      -ms-transform: translate($x, $y);
       -o-transform: translate($x, $y);
          transform: translate($x, $y);
}
@mixin skew($x: 0, $y: 0) {
  -webkit-transform: skew($x, $y);
     -moz-transform: skew($x, $y);
      -ms-transform: skew($x, $y);
       -o-transform: skew($x, $y);
          transform: skew($x, $y);
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
@mixin background-clip($clip) {
  -webkit-background-clip: $clip;
     -moz-background-clip: $clip;
          background-clip: $clip;
}

// Background sizing
@mixin background-size($size){
  -webkit-background-size: $size;
     -moz-background-size: $size;
       -o-background-size: $size;
          background-size: $size;
}


// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
     -moz-user-select: $select;
       -o-user-select: $select;
          user-select: $select;
}

// Resize anything
@mixin resizable($direction: both) {
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Safari fix
}

// CSS3 Content Columns
@mixin content-columns($columnCount, $columnGap: $gridColumnGutter) {
  -webkit-column-count: $columnCount;
     -moz-column-count: $columnCount;
          column-count: $columnCount;
  -webkit-column-gap: $columnGap;
     -moz-column-gap: $columnGap;
          column-gap: $columnGap;
}

// Opacity


 @mixin opacity($opacity: 100) {
  filter: alpha(opacity=$opacity);
  -khtml-opacity: $opacity / 100;
    -moz-opacity: $opacity / 100;
         opacity: $opacity / 100;
}

// // BACKGROUNDS
// // --------------------------------------------------

// lifted corners

@mixin lifted-corners($radius: 4px, $box-shadow:0 15px 10px,  $rotate:3deg ) {

-moz-border-radius:$radius;
border-radius:$radius;

  &:before,
  &:after {
  bottom:15px;
  left:10px;
  width:50%;
  height:20%;
  max-width:300px;
  -webkit-box-shadow:$box-shadow rgba(0, 0, 0, 0.7);
  -moz-box-shadow:$box-shadow rgba(0, 0, 0, 0.7);
  box-shadow:$box-shadow rgba(0, 0, 0, 0.7);
  -webkit-transform:rotate(-$rotate);
  -moz-transform:rotate(-$rotate);
  -ms-transform:rotate(-$rotate);
  -o-transform:rotate(-$rotate);
  transform:rotate(-$rotate);
  }
    &:after {
    right:10px;
    left:auto;
    -webkit-transform:rotate($rotate);
    -moz-transform:rotate($rotate);
    -ms-transform:rotate($rotate);
    -o-transform:rotate($rotate);
    transform:rotate($rotate);
  }
}



// Add an alphatransparency value to any background or border color (via Elyse Holladay)


 // Add an alphatransparency value to any background or border color (via Elyse Holladay)
@mixin translucent-background($color: $white, $alpha: 1) {
  background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}
@mixin translucent-border($color: $white, $alpha: 1) {
  border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
  background-clip: padding-box;
}


// Gradient Bar Colors for buttons and alerts
@mixin gradientBar($primaryColor, $secondaryColor) {
  @include vertical($primaryColor, $secondaryColor);
  border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients


  @mixin horizontal-gradient ($startColor: #555, $endColor: #333) {
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -khtml-gradient(linear, left top, right top, from($startColor), to($endColor)); // Konqueror
  background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
  background-image: -ms-linear-gradient(left, $startColor, $endColor); // IE10
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $startColor), color-stop(100%, $endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(left, $startColor, $endColor); // Le standard
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=1); // IE9 and down
}

@mixin vertical ($startColor: #555, $endColor: #333) {
  background-color: mix($startColor, $endColor, 60%);
  background-repeat: repeat-x;
  background-image: -khtml-gradient(linear, left top, left bottom, from($startColor), to($endColor)); // Konqueror
  background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
  background-image: -ms-linear-gradient(top, $startColor, $endColor); // IE10
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $startColor), color-stop(100%, $endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(top, $startColor, $endColor); // The standard
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0); // IE9 and down
}


@mixin directional-gradient ($startColor: #555, $endColor: #333, $deg: 45deg) {
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
  background-image: -ms-linear-gradient($deg, $startColor, $endColor); // IE10
  background-image: -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient($deg, $startColor, $endColor); // The standard
}

// Old version of vertical-three-colors-gradient
// @mixin vertical-three-colors-gradient($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
//   background-color: mix($midColor, $endColor, 80%);
//   background-repeat: no-repeat;
//   background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
//   background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: -moz-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: -ms-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
//   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0); // IE9 and down, gets no color-stop at all the proper fallback
// }

@mixin vertical-three-colors-gradient($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
  background-color: mix($midColor, $endColor, 80%);
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
  background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
  background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor);
  background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
  background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
  background-repeat: no-repeat;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

// Gradient Bar Colors for buttons and alerts
@mixin gradientBar($primaryColor, $secondaryColor) {
  @include vertical($primaryColor, $secondaryColor);
  border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}



  
  @mixin radial($innerColor: #555, $outerColor: #333)  {
    background-color: $outerColor;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
    background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
    background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
    background-image: -ms-radial-gradient(circle, $innerColor, $outerColor);
    background-repeat: no-repeat;
    // Opera cannot do radial gradients yet
  }


@mixin striped($color, $angle: -45deg) {
    background-color: $color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -ms-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, rgba(255,255,255,.0) 25%, rgba(255,255,255,.0) 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, rgba(255,255,255,.0) 75%, rgba(255,255,255,.0));
  }

// Reset filters for IE
@mixin reset-filter() {
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}

// // Mixin for generating button backgrounds
// // ---------------------------------------
 @mixin buttonBackground($startColor, $endColor) {
  // gradientBar will set the background to a pleasing blend of these, to support IE<=9
  @include gradientBar($startColor, $endColor);
  @include reset-filter;

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:active, &.active, &.disabled, &[disabled] {
    background-color: $endColor;
  }

  // IE 7 + 8 can't handle box-shadow to show active, so we darken a bit ourselves
  &:active,
  &.active {
    background-color: darken($endColor, 10%) #{"\9"};
  }
}

@mixin btnColor($primaryColor, $secondaryColor) {
  @include vertical($primaryColor, $secondaryColor);
  text-shadow: 0 -1px 0 rgba(0,0,0,.25);
  border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fade-in(rgba(0,0,0,.1), .15);
}




// // COMPONENT MIXINS
// // --------------------------------------------------

// // POPOVER ARROWS
// // -------------------------
// // For tipsies and popovers

  @mixin top($arrowWidth: 5px) {
    bottom: 0;
    left: 50%;
    margin-left: -$arrowWidth;
    border-left: $arrowWidth solid transparent;
    border-right: $arrowWidth solid transparent;
    border-top: $arrowWidth solid $black;
  }
   @mixin left($arrowWidth: 5px) {
    top: 50%;
    right: 0;
    margin-top: -$arrowWidth;
    border-top: $arrowWidth solid transparent;
    border-bottom: $arrowWidth solid transparent;
    border-left: $arrowWidth solid $black;
  }
   @mixin bottom($arrowWidth: 5px) {
    top: 0;
    left: 50%;
    margin-left: -$arrowWidth;
    border-left: $arrowWidth solid transparent;
    border-right: $arrowWidth solid transparent;
    border-bottom: $arrowWidth solid $black;
  }
   @mixin right($arrowWidth: 5px) {
    top: 50%;
    left: 0;
    margin-top: -$arrowWidth;
    border-top: $arrowWidth solid transparent;
    border-bottom: $arrowWidth solid transparent;
    border-right: $arrowWidth solid $black;
  }

