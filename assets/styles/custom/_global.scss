@include establish-baseline ;

body { 
	color: $base-color;
	background: $background ;
	font-family: $font-family;

}

a {
	color:#000;
	border-bottom: 1px  solid;
	line-height: 24px;
	text-decoration:none;
	//@include force-wrap;					// force text links to wrap
	&:hover, &:focus, &:active {

	color: #929292;

	}
}

// Max width, for images etc... in RWD
.content-wrapper img { max-width: 100%; height: auto; }

//h1 						{ font-weight: 600; }
ol 						{ @include ordered-inside }
ul 						{ @include unordered-inside }

/* ::Clearfixs and extends. Use which suits best */
/* ----------------------------------------------------------- */

// CHOOSE YOUR CLEARFIX, OR YOU KNOW USE BOTH. WHATEVER, I'M NOT YOUR MOTHER

// Use clearfix if you need general clearfixing
.clearfix 			{ @include clearfix; }

     
        .cf { zoom: 1; }
        .cf:before,
        .cf:after { content: ""; display: table; }
        .cf:after { clear: both; }



// Use pie-clearfix if you need clearfixing that doesn't use overflow: hidden
.pie-clearfix 		{ @include pie-clearfix; }


// Functions for px to em conversions
// ------------------------------------------------------------

@function emify($target, $context) {
   @if $target == 0 { @return 0 }
   @return $target / $context + 0em;
}

// Make px to ems using base-font-size 
// echo as: font-size: em-font(#px);

@function em-font($target, $context: $base-font-size) {
   @return emify($target, $context);
}


// Make px to ems using base-line-height 
// echo as: font-size: em-base(#px);

@function em-base($target, $context: $base-line-height) {
   @return emify($target, $context);
}


@function em($target, $context: $base-font-size) {
    @return ($target / $context) * 1em;
}
